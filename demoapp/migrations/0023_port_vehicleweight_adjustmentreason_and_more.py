# Generated by Django 5.2.5 on 2025-09-01 11:17

import demoapp.custom_fields
import demoapp.model_helpers
import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.core.validators
import django.db.models.deletion
import easy_thumbnails.fields
import phonenumber_field.modelfields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('demoapp', '0022_remove_tradepartner_pan_date_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Port',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('address_line', models.TextField()),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('postal_code', models.IntegerField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=255)),
                ('state', models.CharField(blank=True, max_length=255)),
                ('country', models.CharField(choices=[('AF', 'Afghanistan'), ('AX', 'Åland Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BQ', 'Bonaire, Sint Eustatius and Saba'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('BN', 'Brunei'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('CV', 'Cabo Verde'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CD', 'Congo (the Democratic Republic of the)'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('CI', "Côte d'Ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CW', 'Curaçao'), ('CY', 'Cyprus'), ('CZ', 'Czechia'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('SZ', 'Eswatini'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (Malvinas)'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and McDonald Islands'), ('VA', 'Holy See'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', 'Laos'), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('KP', 'North Korea'), ('MK', 'North Macedonia'), ('MP', 'Northern Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestine, State of'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Réunion'), ('RO', 'Romania'), ('RU', 'Russia'), ('RW', 'Rwanda'), ('BL', 'Saint Barthélemy'), ('SH', 'Saint Helena, Ascension and Tristan da Cunha'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin (French part)'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SX', 'Sint Maarten (Dutch part)'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('KR', 'South Korea'), ('SS', 'South Sudan'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syria'), ('TW', 'Taiwan'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Türkiye'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('GB', 'United Kingdom'), ('UM', 'United States Minor Outlying Islands'), ('US', 'United States of America'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Vietnam'), ('VG', 'Virgin Islands (British)'), ('VI', 'Virgin Islands (U.S.)'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], default='IN', max_length=2)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleWeight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gross_weight', models.FloatField(default=0.0)),
                ('gross_image', easy_thumbnails.fields.ThumbnailerImageField(blank=True, upload_to='')),
                ('tare_weight', models.FloatField(default=0.0)),
                ('tare_image', easy_thumbnails.fields.ThumbnailerImageField(blank=True, upload_to='')),
                ('net_weight', models.FloatField(default=0.0)),
                ('net_image', easy_thumbnails.fields.ThumbnailerImageField(blank=True, upload_to='')),
                ('center_weight', models.FloatField(default=0.0)),
                ('center_weight_image', easy_thumbnails.fields.ThumbnailerImageField(blank=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='AdjustmentReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('apply_to_all_trade_partners', models.BooleanField(default=True)),
                ('applies_on_purchase', models.BooleanField()),
                ('applies_on_sales', models.BooleanField()),
                ('factor_unit', models.ForeignKey(limit_choices_to=demoapp.model_helpers.limit_to_active, on_delete=django.db.models.deletion.PROTECT, to='demoapp.unitofmeasurement')),
                ('item', models.ForeignKey(limit_choices_to=demoapp.model_helpers.limit_to_active, on_delete=django.db.models.deletion.PROTECT, to='demoapp.item')),
                ('tenant', models.ForeignKey(limit_choices_to=demoapp.model_helpers.limit_to_active, on_delete=django.db.models.deletion.PROTECT, to='demoapp.tenant')),
                ('trade_partners', models.ManyToManyField(limit_choices_to=demoapp.model_helpers.limit_to_active, to='demoapp.tradepartner')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdjustmentReasonFactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('quantity_adjustment_type', models.CharField(choices=[('PERCENT', 'Percent'), ('VALUE', 'Value')], default='PERCENT', max_length=16)),
                ('quantity_adjustment_value', demoapp.custom_fields.PositiveFloatField(default=0)),
                ('quantity_adjustment_percent', demoapp.custom_fields.PercentField(default=0)),
                ('rate_adjustment_type', models.CharField(choices=[('PERCENT', 'Percent'), ('VALUE', 'Value')], default='PERCENT', max_length=16)),
                ('rate_adjustment_value', demoapp.custom_fields.PositiveFloatField(default=0)),
                ('rate_adjustment_percent', demoapp.custom_fields.PercentField(default=0)),
                ('start_range', demoapp.custom_fields.PositiveFloatField()),
                ('end_range', demoapp.custom_fields.PositiveFloatField()),
                ('adjustment_reason', models.ForeignKey(limit_choices_to=demoapp.model_helpers.limit_to_active, on_delete=django.db.models.deletion.PROTECT, to='demoapp.adjustmentreason')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Counter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('document_type', models.CharField(choices=[('GoodsReceiptNote', 'Goods Receipt Note'), ('Segregation', 'Segregation'), ('MrfSegregation', 'MRF Segregation'), ('BaleSet', 'Bale Set'), ('DispatchOrder', 'Dispatch Order'), ('PurchaseBill', 'Purchase Bill'), ('PurchaseOrder', 'Purchase Order'), ('SalesOrder', 'Sales Order'), ('WorkOrder', 'Work Order'), ('Production', 'Production'), ('SalesBill', 'Sales Bill'), ('WarehouseTransfer', 'Warehouse Transfer'), ('WarehouseTransferReceipt', 'Warehouse Transfer Receipt')], max_length=32)),
                ('counter', models.BigIntegerField(default=0)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='demoapp.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('license_number', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=255)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('driver_photo', easy_thumbnails.fields.ThumbnailerImageField(blank=True, null=True, upload_to='')),
                ('date_of_birth', models.DateField()),
                ('license_issuing_authority', models.CharField(blank=True, max_length=255)),
                ('license_issue_date', models.DateField(blank=True, null=True)),
                ('license_photo', easy_thumbnails.fields.ThumbnailerImageField(blank=True, null=True, upload_to='')),
                ('insurance_number', models.CharField(blank=True, max_length=255)),
                ('two_wheeler_light', models.BooleanField(default=False)),
                ('two_wheeler_any', models.BooleanField(default=False)),
                ('four_wheeler_light', models.BooleanField(default=False)),
                ('four_wheeler_any', models.BooleanField(default=False)),
                ('commercial_truck', models.BooleanField(default=False)),
                ('commercial_trailer', models.BooleanField(default=False)),
                ('commercial_forklift', models.BooleanField(default=False)),
                ('tenant', models.ForeignKey(limit_choices_to=demoapp.model_helpers.limit_to_active, on_delete=django.db.models.deletion.PROTECT, to='demoapp.tenant')),
            ],
            options={
                'unique_together': {('name', 'tenant')},
            },
        ),
        migrations.CreateModel(
            name='DispatchOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING', 'Pending'), ('CHANGE_REQUEST', 'Change Request'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='DRAFT', max_length=32)),
                ('approve_datetime', models.DateTimeField(blank=True, null=True)),
                ('dispatch_number', demoapp.custom_fields.UpperCharField(blank=True, max_length=32)),
                ('prefixed_dispatch_number', demoapp.custom_fields.UpperCharField(blank=True, max_length=32, null=True)),
                ('dispatch_date', models.DateField()),
                ('is_external', models.BooleanField(default=False)),
                ('dispatch_mode', models.CharField(choices=[('HAND', 'Hand'), ('ROAD', 'Road'), ('AIR', 'Air')], default='ROAD', max_length=8)),
                ('traced_path_image', easy_thumbnails.fields.ThumbnailerImageField(blank=True, null=True, upload_to='')),
                ('total_distance', demoapp.custom_fields.PositiveFloatField(blank=True, null=True)),
                ('total_time_taken', demoapp.custom_fields.PositiveFloatField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True)),
                ('delivered_on_time', models.BooleanField(default=False)),
                ('quality_check_passed', models.BooleanField(default=False)),
                ('good_condition', models.BooleanField(default=False)),
                ('temperature_control_maintained', models.BooleanField(default=False)),
                ('secure_packing', models.BooleanField(default=False)),
                ('received_intact', models.BooleanField(default=False)),
                ('e_way_bill_number', models.CharField(blank=True, max_length=255)),
                ('e_way_bill_date', models.DateField(blank=True, null=True)),
                ('lorry_receipt_number', models.CharField(blank=True, max_length=255)),
                ('lorry_receipt_date', models.DateField(blank=True, null=True)),
                ('sales_order_number', models.CharField(blank=True, max_length=255)),
                ('sales_order_date', models.DateField(blank=True, null=True)),
                ('trade_partner_order_number', models.CharField(blank=True, max_length=255)),
                ('trade_partner_order_date', models.DateField(blank=True, null=True)),
                ('gross_weight_by_trade_partner', demoapp.custom_fields.PositiveFloatField(blank=True, null=True)),
                ('gross_weight_by_us', demoapp.custom_fields.PositiveFloatField(blank=True, null=True)),
                ('tare_weight_by_trade_partner', demoapp.custom_fields.PositiveFloatField(blank=True, null=True)),
                ('tare_weight_by_us', demoapp.custom_fields.PositiveFloatField(blank=True, null=True)),
                ('inco_terms', models.CharField(blank=True, choices=[('EXW', 'Ex Works'), ('FCA', 'Free Carrier'), ('CPT', 'Carriage Paid To'), ('CIP', 'Carriage and Insurance Paid To'), ('DAP', 'Delivered at Place'), ('DPU', 'Delivered at Place Unloaded'), ('DDP', 'Delivered Duty Paid'), ('FAS', 'Free Alongside Ship'), ('FOB', 'Free on Board'), ('CFR', 'Cost and Freight'), ('CIF', 'Cost Insurance and Freight')], max_length=16, null=True)),
                ('export_line', models.CharField(blank=True, max_length=255)),
                ('export_vessel', models.CharField(blank=True, max_length=255)),
                ('export_container', models.CharField(blank=True, max_length=255)),
                ('export_house', models.CharField(blank=True, max_length=255)),
                ('export_house_bill_of_lading_number', models.CharField(blank=True, max_length=255)),
                ('export_house_bill_of_lading_date', models.DateField(blank=True, null=True)),
                ('country_of_origin', models.CharField(blank=True, choices=[('AF', 'Afghanistan'), ('AX', 'Åland Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BQ', 'Bonaire, Sint Eustatius and Saba'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('BN', 'Brunei'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('CV', 'Cabo Verde'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CD', 'Congo (the Democratic Republic of the)'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('CI', "Côte d'Ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CW', 'Curaçao'), ('CY', 'Cyprus'), ('CZ', 'Czechia'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('SZ', 'Eswatini'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (Malvinas)'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and McDonald Islands'), ('VA', 'Holy See'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', 'Laos'), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('KP', 'North Korea'), ('MK', 'North Macedonia'), ('MP', 'Northern Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestine, State of'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Réunion'), ('RO', 'Romania'), ('RU', 'Russia'), ('RW', 'Rwanda'), ('BL', 'Saint Barthélemy'), ('SH', 'Saint Helena, Ascension and Tristan da Cunha'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin (French part)'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SX', 'Sint Maarten (Dutch part)'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('KR', 'South Korea'), ('SS', 'South Sudan'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syria'), ('TW', 'Taiwan'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Türkiye'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('GB', 'United Kingdom'), ('UM', 'United States Minor Outlying Islands'), ('US', 'United States of America'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Vietnam'), ('VG', 'Virgin Islands (British)'), ('VI', 'Virgin Islands (U.S.)'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], max_length=8)),
                ('country_destination', models.CharField(blank=True, choices=[('AF', 'Afghanistan'), ('AX', 'Åland Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BQ', 'Bonaire, Sint Eustatius and Saba'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('BN', 'Brunei'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('CV', 'Cabo Verde'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CD', 'Congo (the Democratic Republic of the)'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('CI', "Côte d'Ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CW', 'Curaçao'), ('CY', 'Cyprus'), ('CZ', 'Czechia'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('SZ', 'Eswatini'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (Malvinas)'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and McDonald Islands'), ('VA', 'Holy See'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', 'Laos'), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('KP', 'North Korea'), ('MK', 'North Macedonia'), ('MP', 'Northern Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestine, State of'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Réunion'), ('RO', 'Romania'), ('RU', 'Russia'), ('RW', 'Rwanda'), ('BL', 'Saint Barthélemy'), ('SH', 'Saint Helena, Ascension and Tristan da Cunha'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin (French part)'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SX', 'Sint Maarten (Dutch part)'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('KR', 'South Korea'), ('SS', 'South Sudan'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syria'), ('TW', 'Taiwan'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Türkiye'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('GB', 'United Kingdom'), ('UM', 'United States Minor Outlying Islands'), ('US', 'United States of America'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Vietnam'), ('VG', 'Virgin Islands (British)'), ('VI', 'Virgin Islands (U.S.)'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], max_length=8)),
                ('seal_number', models.CharField(blank=True, max_length=255)),
                ('seal_date', models.DateField(blank=True, null=True)),
                ('seal_bill_of_lading_number', models.CharField(blank=True, max_length=255)),
                ('seal_bill_of_lading_date', models.DateField(blank=True, null=True)),
                ('trade_partner_bill_number', models.CharField(blank=True, max_length=255)),
                ('trade_partner_bill_date', models.DateField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('approved_documents', models.ManyToManyField(blank=True, to='demoapp.document')),
                ('billing_address', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_billing': True}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='dispatch_order_billing_address', to='demoapp.tradepartneraddress')),
                ('documents', models.ManyToManyField(blank=True, related_name='documents_dispatch_order', to='demoapp.document')),
                ('export_documents', models.ManyToManyField(blank=True, related_name='export_documents_dispatch_order', to='demoapp.document')),
                ('packaging_documents', models.ManyToManyField(blank=True, related_name='packaging_documents_dispatch_order', to='demoapp.document')),
                ('sales_order_documents', models.ManyToManyField(blank=True, related_name='sales_order_documents_dispatch_order', to='demoapp.document')),
                ('shipping_address', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_shipping': True}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='dispatch_order_shipping_address', to='demoapp.tradepartneraddress')),
                ('tenant', models.ForeignKey(limit_choices_to=demoapp.model_helpers.limit_to_active, on_delete=django.db.models.deletion.PROTECT, to='demoapp.tenant')),
                ('trade_partner', models.ForeignKey(limit_choices_to={'is_active': True, 'is_customer': True}, on_delete=django.db.models.deletion.PROTECT, to='demoapp.tradepartner')),
                ('transportation_documents', models.ManyToManyField(blank=True, related_name='transportation_documents_dispatch_order', to='demoapp.document')),
                ('warehouse', models.ForeignKey(limit_choices_to=demoapp.model_helpers.limit_to_active, on_delete=django.db.models.deletion.PROTECT, to='demoapp.warehouse')),
                ('driver', models.ForeignKey(blank=True, limit_choices_to=demoapp.model_helpers.limit_to_active, null=True, on_delete=django.db.models.deletion.PROTECT, to='demoapp.driver')),
                ('port_of_discharge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='port_of_discharge_dispatch_order', to='demoapp.port')),
                ('port_of_loading', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='port_of_loading_dispatch_order', to='demoapp.port')),
            ],
            options={
                'permissions': [('approve_dispatch_order', 'Can approve the dispatch order')],
            },
        ),
        migrations.CreateModel(
            name='EntityBankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('account_number', models.CharField(max_length=32)),
                ('ifsc_code', models.CharField(help_text='This will auto generate Bank Name, Branch (if not custom-entered), MICR, Swift Code', max_length=11, validators=[django.core.validators.MinLengthValidator(11)], verbose_name='IFSC Code')),
                ('bank_name', models.CharField(blank=True, max_length=255)),
                ('swift_code', models.CharField(blank=True, max_length=255)),
                ('micr', models.CharField(blank=True, max_length=255)),
                ('branch', models.CharField(blank=True, max_length=512)),
                ('intermediate_bank_name', models.CharField(blank=True, max_length=255)),
                ('intermediate_bank_swift_code', models.CharField(blank=True, max_length=255)),
                ('upi_id', models.CharField(blank=True, max_length=512)),
                ('upi_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('account_type', models.ForeignKey(limit_choices_to={'enum': 'BANK_ACCOUNT_TYPE'}, on_delete=django.db.models.deletion.PROTECT, to='demoapp.dynamicenum')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='currency_entity_bank_account', to='demoapp.currency')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='demoapp.entity')),
                ('intermediate_bank_currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='intermediate_bank_currency_entity_bank_account', to='demoapp.currency')),
                ('upi_currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='upi_currency_entity_bank_account', to='demoapp.currency')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsReceiptNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING', 'Pending'), ('CHANGE_REQUEST', 'Change Request'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='DRAFT', max_length=32)),
                ('approve_datetime', models.DateTimeField(blank=True, null=True)),
                ('address_line', models.TextField(blank=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('postal_code', models.IntegerField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=255)),
                ('state', models.CharField(blank=True, max_length=255)),
                ('country', models.CharField(blank=True, choices=[('AF', 'Afghanistan'), ('AX', 'Åland Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BQ', 'Bonaire, Sint Eustatius and Saba'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('BN', 'Brunei'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('CV', 'Cabo Verde'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CD', 'Congo (the Democratic Republic of the)'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('CI', "Côte d'Ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CW', 'Curaçao'), ('CY', 'Cyprus'), ('CZ', 'Czechia'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('SZ', 'Eswatini'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (Malvinas)'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and McDonald Islands'), ('VA', 'Holy See'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', 'Laos'), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('KP', 'North Korea'), ('MK', 'North Macedonia'), ('MP', 'Northern Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestine, State of'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Réunion'), ('RO', 'Romania'), ('RU', 'Russia'), ('RW', 'Rwanda'), ('BL', 'Saint Barthélemy'), ('SH', 'Saint Helena, Ascension and Tristan da Cunha'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin (French part)'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SX', 'Sint Maarten (Dutch part)'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('KR', 'South Korea'), ('SS', 'South Sudan'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syria'), ('TW', 'Taiwan'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Türkiye'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('GB', 'United Kingdom'), ('UM', 'United States Minor Outlying Islands'), ('US', 'United States of America'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Vietnam'), ('VG', 'Virgin Islands (British)'), ('VI', 'Virgin Islands (U.S.)'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], max_length=2)),
                ('places_api_json', models.JSONField(blank=True, default=dict)),
                ('grn_number', demoapp.custom_fields.UpperCharField(blank=True, max_length=32)),
                ('prefixed_grn_number', demoapp.custom_fields.UpperCharField(blank=True, max_length=32, null=True)),
                ('grn_date', models.DateField()),
                ('is_qced', models.BooleanField(default=False)),
                ('delivery_challan_number', models.CharField(blank=True, max_length=255)),
                ('delivery_challan_date', models.DateField(blank=True, null=True)),
                ('gross_weight_by_trade_partner', demoapp.custom_fields.PositiveFloatField(blank=True, null=True)),
                ('gross_weight_by_us', demoapp.custom_fields.PositiveFloatField(blank=True, null=True)),
                ('tare_weight_by_trade_partner', demoapp.custom_fields.PositiveFloatField(blank=True, null=True)),
                ('tare_weight_by_us', demoapp.custom_fields.PositiveFloatField(blank=True, null=True)),
                ('center_weight_slip_by_trade_partner', demoapp.custom_fields.PositiveFloatField(blank=True, null=True)),
                ('center_weight_slip_by_us', demoapp.custom_fields.PositiveFloatField(blank=True, null=True)),
                ('trade_partner_bill_number', models.CharField(blank=True, max_length=255)),
                ('trade_partner_bill_date', models.DateField(blank=True, null=True)),
                ('e_way_bill_number', models.CharField(blank=True, max_length=255)),
                ('e_way_bill_date', models.DateField(blank=True, null=True)),
                ('manifest_number', models.CharField(blank=True, max_length=255)),
                ('manifest_date', models.DateField(blank=True, null=True)),
                ('manifest_image', easy_thumbnails.fields.ThumbnailerImageField(blank=True, null=True, upload_to='')),
                ('transaction_rating', models.CharField(blank=True, max_length=255)),
                ('is_system_grn', models.BooleanField(default=False, help_text='System generated grn used for reclassification of items and other purposes')),
                ('traced_path_image', easy_thumbnails.fields.ThumbnailerImageField(blank=True, null=True, upload_to='')),
                ('total_distance', models.FloatField(blank=True, null=True)),
                ('total_time_taken', models.FloatField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True)),
                ('delivered_on_time', models.BooleanField(default=False)),
                ('quality_check_passed', models.BooleanField(default=False)),
                ('good_condition', models.BooleanField(default=False)),
                ('temperature_control_maintained', models.BooleanField(default=False)),
                ('secure_packing', models.BooleanField(default=False)),
                ('received_intact', models.BooleanField(default=False)),
                ('lorry_receipt_number', models.CharField(blank=True, max_length=255)),
                ('lorry_receipt_date', models.DateField(blank=True, null=True)),
                ('transporter_name', models.CharField(blank=True, max_length=255)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('approved_documents', models.ManyToManyField(blank=True, to='demoapp.document')),
                ('billing_address', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_billing': True}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='goods_receipt_note_billing_address', to='demoapp.tradepartneraddress')),
                ('center_documents', models.ManyToManyField(blank=True, related_name='center_documents_goods_receipt_note', to='demoapp.document')),
                ('dispatch_order', models.OneToOneField(blank=True, limit_choices_to=demoapp.model_helpers.limit_to_approved, null=True, on_delete=django.db.models.deletion.PROTECT, to='demoapp.dispatchorder')),
                ('driver', models.ForeignKey(blank=True, limit_choices_to=demoapp.model_helpers.limit_to_active, null=True, on_delete=django.db.models.deletion.PROTECT, to='demoapp.driver')),
                ('e_way_bill_documents', models.ManyToManyField(blank=True, related_name='e_way_bill_documents_goods_receipt_note', to='demoapp.document')),
                ('lorry_receipt_documents', models.ManyToManyField(blank=True, related_name='lorry_receipt_documents_goods_receipt_note', to='demoapp.document')),
                ('shipping_address', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_shipping': True}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='goods_receipt_note_shipping_address', to='demoapp.tradepartneraddress')),
                ('tenant', models.ForeignKey(limit_choices_to=demoapp.model_helpers.limit_to_active, on_delete=django.db.models.deletion.PROTECT, to='demoapp.tenant')),
                ('trade_partner', models.ForeignKey(limit_choices_to=demoapp.model_helpers.limit_to_active, on_delete=django.db.models.deletion.PROTECT, to='demoapp.tradepartner')),
                ('trade_partner_bill_documents', models.ManyToManyField(blank=True, related_name='trade_partner_bill_documents_goods_receipt_note', to='demoapp.document')),
                ('trade_partner_documents', models.ManyToManyField(blank=True, related_name='trade_partner_documents_goods_receipt_note', to='demoapp.document')),
                ('transaction_currency', models.ForeignKey(limit_choices_to=demoapp.model_helpers.limit_to_active, on_delete=django.db.models.deletion.PROTECT, to='demoapp.currency')),
                ('warehouse', models.ForeignKey(limit_choices_to=demoapp.model_helpers.limit_to_active, on_delete=django.db.models.deletion.PROTECT, to='demoapp.warehouse')),
            ],
            options={
                'permissions': [('approve_goodsreceiptnote', 'Can approve the goods receipt note')],
            },
        ),
        migrations.CreateModel(
            name='GrnLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('address_line', models.TextField(blank=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('postal_code', models.IntegerField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=255)),
                ('state', models.CharField(blank=True, max_length=255)),
                ('country', models.CharField(blank=True, choices=[('AF', 'Afghanistan'), ('AX', 'Åland Islands'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua and Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BQ', 'Bonaire, Sint Eustatius and Saba'), ('BA', 'Bosnia and Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('BN', 'Brunei'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('CV', 'Cabo Verde'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CD', 'Congo (the Democratic Republic of the)'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('CI', "Côte d'Ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CW', 'Curaçao'), ('CY', 'Cyprus'), ('CZ', 'Czechia'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('SZ', 'Eswatini'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (Malvinas)'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GG', 'Guernsey'), ('GN', 'Guinea'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island and McDonald Islands'), ('VA', 'Holy See'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IM', 'Isle of Man'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', 'Laos'), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia'), ('MD', 'Moldova'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('ME', 'Montenegro'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('KP', 'North Korea'), ('MK', 'North Macedonia'), ('MP', 'Northern Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestine, State of'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Réunion'), ('RO', 'Romania'), ('RU', 'Russia'), ('RW', 'Rwanda'), ('BL', 'Saint Barthélemy'), ('SH', 'Saint Helena, Ascension and Tristan da Cunha'), ('KN', 'Saint Kitts and Nevis'), ('LC', 'Saint Lucia'), ('MF', 'Saint Martin (French part)'), ('PM', 'Saint Pierre and Miquelon'), ('VC', 'Saint Vincent and the Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome and Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('RS', 'Serbia'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SX', 'Sint Maarten (Dutch part)'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia and the South Sandwich Islands'), ('KR', 'South Korea'), ('SS', 'South Sudan'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SJ', 'Svalbard and Jan Mayen'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syria'), ('TW', 'Taiwan'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania'), ('TH', 'Thailand'), ('TL', 'Timor-Leste'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Türkiye'), ('TM', 'Turkmenistan'), ('TC', 'Turks and Caicos Islands'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('GB', 'United Kingdom'), ('UM', 'United States Minor Outlying Islands'), ('US', 'United States of America'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VE', 'Venezuela'), ('VN', 'Vietnam'), ('VG', 'Virgin Islands (British)'), ('VI', 'Virgin Islands (U.S.)'), ('WF', 'Wallis and Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], max_length=2)),
                ('places_api_json', models.JSONField(blank=True, default=dict)),
                ('quantity', demoapp.custom_fields.PositiveFloatField(default=0)),
                ('rate', demoapp.custom_fields.PositiveFloatField(default=0)),
                ('epr_quantity', demoapp.custom_fields.PositiveFloatField(blank=True, null=True)),
                ('is_rcm', models.BooleanField(default=False)),
                ('rcm_code', models.CharField(blank=True, max_length=32)),
                ('qc_approved', models.BooleanField(default=False)),
                ('bill_quantity', demoapp.custom_fields.PositiveFloatField(blank=True, null=True)),
                ('bill_rate', demoapp.custom_fields.PositiveFloatField(blank=True, null=True)),
                ('documents', models.ManyToManyField(blank=True, to='demoapp.document')),
                ('epr_type', models.ForeignKey(blank=True, limit_choices_to={'enum': 'EPR_TYPE'}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='epr_type_grn_line_item', to='demoapp.dynamicenum')),
                ('goods_receipt_note', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='demoapp.goodsreceiptnote')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='demoapp.item')),
                ('source', models.ForeignKey(blank=True, limit_choices_to={'enum': 'MATERIAL_SOURCE_NAME'}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='source_grn_line_item', to='demoapp.dynamicenum')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='demoapp.unitofmeasurement')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GrnLineItemAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('quantity_adjustment_type', models.CharField(choices=[('PERCENT', 'Percent'), ('VALUE', 'Value')], default='PERCENT', max_length=16)),
                ('quantity_adjustment_value', demoapp.custom_fields.PositiveFloatField(default=0)),
                ('quantity_adjustment_percent', demoapp.custom_fields.PercentField(default=0)),
                ('rate_adjustment_type', models.CharField(choices=[('PERCENT', 'Percent'), ('VALUE', 'Value')], default='PERCENT', max_length=16)),
                ('rate_adjustment_value', demoapp.custom_fields.PositiveFloatField(default=0)),
                ('rate_adjustment_percent', demoapp.custom_fields.PercentField(default=0)),
                ('factor_value', demoapp.custom_fields.PositiveFloatField(default=0)),
                ('adjustment_reason_factor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='demoapp.adjustmentreasonfactor')),
                ('grn_line_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='demoapp.grnlineitem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GrnVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_number', models.CharField(max_length=128)),
                ('vehicle_make', models.CharField(max_length=128)),
                ('driver_name', models.CharField(max_length=128)),
                ('driver_contact', models.CharField(max_length=128)),
                ('driver_licence_number', models.CharField(max_length=128)),
                ('gross_weight_by_trade_partner', models.FloatField()),
                ('gross_weight_by_us', models.FloatField()),
                ('tare_weight_by_trade_partner', models.FloatField()),
                ('tare_weight_by_us', models.FloatField()),
                ('net_weight_by_trade_partner', models.FloatField()),
                ('net_weight_by_us', models.FloatField()),
                ('center_weight_slip_by_trade_partner', models.FloatField()),
                ('center_weight_slip_by_us', models.FloatField()),
                ('vehicle_photo_front', models.FileField(upload_to='')),
                ('vehicle_photo_back', models.FileField(upload_to='')),
                ('vehicle_photo_side', models.FileField(upload_to='')),
                ('driver_photo', models.FileField(upload_to='')),
                ('driver_license_photo', models.FileField(upload_to='')),
                ('goods_receipt_note', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='demoapp.goodsreceiptnote')),
            ],
        ),
        migrations.CreateModel(
            name='Packaging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=128)),
                ('capacity', demoapp.custom_fields.PositiveFloatField()),
                ('tenant', models.ForeignKey(limit_choices_to=demoapp.model_helpers.limit_to_active, on_delete=django.db.models.deletion.PROTECT, to='demoapp.tenant')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='demoapp.unitofmeasurement')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InventoryQueueRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('unit_category', models.CharField(choices=[('MASS', 'Mass'), ('VOLUME', 'Volume'), ('DISCRETE', 'Discrete')], max_length=32)),
                ('quality_checked', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('quantity', models.DecimalField(decimal_places=2, default=0, max_digits=16)),
                ('on_hold', models.BooleanField(default=False)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='demoapp.item')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='demoapp.warehouse')),
                ('packaging', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='demoapp.packaging')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='grnlineitem',
            name='packaging',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='demoapp.packaging'),
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('tenant', models.ForeignKey(limit_choices_to=demoapp.model_helpers.limit_to_active, on_delete=django.db.models.deletion.PROTECT, to='demoapp.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING', 'Pending'), ('CHANGE_REQUEST', 'Change Request'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='DRAFT', max_length=32)),
                ('approve_datetime', models.DateTimeField(blank=True, null=True)),
                ('tolerance_allowance', models.FloatField(default=0)),
                ('should_disclose_rate', models.BooleanField(default=False)),
                ('purchase_order_number', models.TextField(blank=True)),
                ('prefixed_purchase_order_number', models.CharField(blank=True, default='', max_length=32)),
                ('purchase_order_date', models.DateField(default=demoapp.model_helpers.timezone_date)),
                ('other_cost', models.FloatField(default=0)),
                ('transport_cost', models.FloatField(default=0)),
                ('round_off', models.FloatField(default=0)),
                ('tcs_percent', models.FloatField(default=0)),
                ('tds_percent', models.FloatField(default=0)),
                ('remarks', models.TextField(blank=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('approved_documents', models.ManyToManyField(blank=True, to='demoapp.document')),
                ('billing_address', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_billing': True}, null=True, on_delete=django.db.models.deletion.PROTECT, to='demoapp.tradepartneraddress')),
                ('center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='demoapp.center')),
                ('trade_partner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='demoapp.tradepartner')),
                ('trade_partner_bank_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='demoapp.tradepartnerbankaccount')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='demoapp.warehouse')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='goodsreceiptnote',
            name='purchase_order',
            field=models.ForeignKey(blank=True, limit_choices_to=demoapp.model_helpers.limit_to_approved, null=True, on_delete=django.db.models.deletion.PROTECT, to='demoapp.purchaseorder'),
        ),
        migrations.CreateModel(
            name='SalesOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING', 'Pending'), ('CHANGE_REQUEST', 'Change Request'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='DRAFT', max_length=32)),
                ('approve_datetime', models.DateTimeField(blank=True, null=True)),
                ('sales_order_number', models.CharField(max_length=128)),
                ('prefixed_sales_order_number', models.CharField(blank=True, default='', max_length=32)),
                ('sales_order_date', models.DateField()),
                ('trade_partner_order_number', models.CharField(max_length=128)),
                ('trade_partner_order_date', models.DateField()),
                ('other_cost', demoapp.custom_fields.PositiveFloatField(default=0)),
                ('transport_cost', demoapp.custom_fields.PositiveFloatField(default=0)),
                ('tcs_percent', demoapp.custom_fields.PercentField(default=0)),
                ('tds_percent', demoapp.custom_fields.PercentField(default=0)),
                ('remarks', models.TextField(blank=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('approved_documents', models.ManyToManyField(blank=True, related_name='sales_order_approved_documents', to='demoapp.document')),
                ('billing_address', models.ForeignKey(limit_choices_to={'is_active': True, 'is_billing': True}, on_delete=django.db.models.deletion.PROTECT, related_name='sales_order_billing_address', to='demoapp.tradepartneraddress')),
                ('documents', models.ManyToManyField(blank=True, to='demoapp.document')),
                ('entity_bank_account', models.ForeignKey(blank=True, limit_choices_to=demoapp.model_helpers.limit_to_active, null=True, on_delete=django.db.models.deletion.PROTECT, to='demoapp.entitybankaccount')),
                ('payment_term', models.ForeignKey(blank=True, limit_choices_to={'enum': 'PAYMENT_TERM'}, null=True, on_delete=django.db.models.deletion.PROTECT, to='demoapp.dynamicenum')),
                ('shipping_address', models.ForeignKey(limit_choices_to={'is_active': True, 'is_shipping': True}, on_delete=django.db.models.deletion.PROTECT, related_name='sales_order_shipping_address', to='demoapp.tradepartneraddress')),
                ('tenant', models.ForeignKey(limit_choices_to=demoapp.model_helpers.limit_to_active, on_delete=django.db.models.deletion.PROTECT, to='demoapp.tenant')),
                ('trade_partner', models.ForeignKey(limit_choices_to=demoapp.model_helpers.limit_to_active, on_delete=django.db.models.deletion.PROTECT, to='demoapp.tradepartner')),
                ('trade_partner_bank_account', models.ForeignKey(blank=True, limit_choices_to=demoapp.model_helpers.limit_to_active, null=True, on_delete=django.db.models.deletion.PROTECT, to='demoapp.tradepartnerbankaccount')),
                ('warehouse', models.ForeignKey(limit_choices_to=demoapp.model_helpers.limit_to_active, on_delete=django.db.models.deletion.PROTECT, to='demoapp.warehouse')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='dispatchorder',
            name='sales_order',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='demoapp.salesorder'),
        ),
        migrations.CreateModel(
            name='SalesOrderLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('quantity', demoapp.custom_fields.PositiveFloatField()),
                ('rate', demoapp.custom_fields.PositiveFloatField()),
                ('expected_delivery_date', models.DateField(blank=True, null=True, validators=[demoapp.model_helpers.future_date_check])),
                ('dispatch_mode', models.CharField(choices=[('HAND', 'Hand'), ('ROAD', 'Road'), ('AIR', 'Air')], max_length=8)),
                ('is_rcm', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
                ('process_instructions', models.TextField(blank=True)),
                ('item', models.ForeignKey(limit_choices_to=demoapp.model_helpers.limit_to_active, on_delete=django.db.models.deletion.PROTECT, to='demoapp.item')),
                ('packaging', models.ForeignKey(blank=True, limit_choices_to=demoapp.model_helpers.limit_to_active, null=True, on_delete=django.db.models.deletion.PROTECT, to='demoapp.packaging')),
                ('process', models.ForeignKey(blank=True, limit_choices_to=demoapp.model_helpers.limit_to_active, null=True, on_delete=django.db.models.deletion.PROTECT, to='demoapp.process')),
                ('process_documents', models.ManyToManyField(blank=True, related_name='sales_order_line_item_process_documents', to='demoapp.document')),
                ('qc_documents', models.ManyToManyField(blank=True, related_name='sales_order_line_item_qc_documents', to='demoapp.document')),
                ('sales_order', models.ForeignKey(limit_choices_to=demoapp.model_helpers.limit_to_unarchived, on_delete=django.db.models.deletion.PROTECT, to='demoapp.salesorder')),
                ('unit', models.ForeignKey(limit_choices_to=demoapp.model_helpers.limit_to_active, on_delete=django.db.models.deletion.PROTECT, to='demoapp.unitofmeasurement')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SerialMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('prefix', models.CharField(blank=True, default='', max_length=32)),
                ('document_type', models.CharField(choices=[('GoodsReceiptNote', 'Goods Receipt Note'), ('Segregation', 'Segregation'), ('MrfSegregation', 'MRF Segregation'), ('BaleSet', 'Bale Set'), ('DispatchOrder', 'Dispatch Order'), ('PurchaseBill', 'Purchase Bill'), ('PurchaseOrder', 'Purchase Order'), ('SalesOrder', 'Sales Order'), ('WorkOrder', 'Work Order'), ('Production', 'Production'), ('SalesBill', 'Sales Bill'), ('WarehouseTransfer', 'Warehouse Transfer'), ('WarehouseTransferReceipt', 'Warehouse Transfer Receipt')], max_length=32)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='demoapp.entity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TermAndCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('DISPATCH', 'Dispatch Order'), ('PURCHASE_BILL', 'Purchase Bill'), ('SALES_ORDER', 'Sales Order'), ('SALES_INVOICE', 'Sales Invoice'), ('PURCHASE_ORDER', 'Purchase Order')], max_length=32)),
                ('terms', models.TextField()),
                ('tenant', models.ForeignKey(limit_choices_to=demoapp.model_helpers.limit_to_active, on_delete=django.db.models.deletion.PROTECT, to='demoapp.tenant')),
            ],
            options={
                'unique_together': {('name', 'tenant')},
            },
        ),
        migrations.AddField(
            model_name='salesorder',
            name='payment_term_and_conditions',
            field=models.ManyToManyField(related_name='sales_order_payment_term_and_conditions', to='demoapp.termandcondition'),
        ),
        migrations.AddField(
            model_name='salesorder',
            name='sales_term_and_conditions',
            field=models.ManyToManyField(related_name='sales_order_sales_term_and_conditions', to='demoapp.termandcondition'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='delivery_terms_and_conditions',
            field=models.ManyToManyField(blank=True, related_name='delivery_terms_and_conditions', to='demoapp.termandcondition'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='terms_and_conditions',
            field=models.ManyToManyField(blank=True, related_name='terms_and_conditions', to='demoapp.termandcondition'),
        ),
        migrations.AddField(
            model_name='dispatchorder',
            name='term_and_conditions',
            field=models.ManyToManyField(blank=True, to='demoapp.termandcondition'),
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('vehicle_number', models.CharField(max_length=100)),
                ('vehicle_photo', easy_thumbnails.fields.ThumbnailerImageField(blank=True, null=True, upload_to='')),
                ('make', models.CharField(blank=True, max_length=255)),
                ('manufacturer', models.CharField(blank=True, max_length=255)),
                ('model', models.CharField(blank=True, max_length=255)),
                ('date_of_issue', models.DateField(blank=True, null=True)),
                ('end_of_life', models.DateField(blank=True, null=True)),
                ('gross_weight', demoapp.custom_fields.PositiveFloatField(blank=True, null=True)),
                ('allowed_total_weight', demoapp.custom_fields.PositiveFloatField()),
                ('insurer', models.CharField(blank=True, max_length=255, null=True)),
                ('insurance_number', models.CharField(blank=True, max_length=255, null=True)),
                ('insurance_end_date', models.DateField(blank=True, null=True, validators=[demoapp.model_helpers.future_date_check])),
                ('puc_end_date', models.DateField(blank=True, null=True, validators=[demoapp.model_helpers.future_date_check])),
                ('road_permit_number', models.CharField(blank=True, max_length=255)),
                ('issued_by_road_agency', models.CharField(blank=True, max_length=255)),
                ('permit_expiry_date', models.DateField(blank=True, null=True, validators=[demoapp.model_helpers.future_date_check])),
                ('headlights_working', models.BooleanField(default=False)),
                ('reverse_horn_working', models.BooleanField(default=False)),
                ('turn_signal_working', models.BooleanField(default=False)),
                ('brake_system_working', models.BooleanField(default=False)),
                ('tyre_pressure_adequate', models.BooleanField(default=False)),
                ('documents', models.ManyToManyField(blank=True, to='demoapp.document')),
                ('tenant', models.ForeignKey(limit_choices_to=demoapp.model_helpers.limit_to_active, on_delete=django.db.models.deletion.PROTECT, to='demoapp.tenant')),
            ],
        ),
        migrations.AddField(
            model_name='goodsreceiptnote',
            name='vehicle',
            field=models.ForeignKey(blank=True, limit_choices_to=demoapp.model_helpers.limit_to_active, null=True, on_delete=django.db.models.deletion.PROTECT, to='demoapp.vehicle'),
        ),
        migrations.AddField(
            model_name='dispatchorder',
            name='vehicle',
            field=models.ForeignKey(blank=True, limit_choices_to=demoapp.model_helpers.limit_to_active, null=True, on_delete=django.db.models.deletion.PROTECT, to='demoapp.vehicle'),
        ),
        migrations.CreateModel(
            name='VehicleImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', easy_thumbnails.fields.ThumbnailerImageField(upload_to='')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='demoapp.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='DispatchLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('quantity', demoapp.custom_fields.PositiveFloatField(default=0)),
                ('rate', models.FloatField(default=0)),
                ('bill_quantity', demoapp.custom_fields.PositiveFloatField(blank=True, null=True)),
                ('bill_rate', demoapp.custom_fields.PositiveFloatField(blank=True, null=True)),
                ('is_gst_enabled', models.BooleanField(default=True)),
                ('documents', models.ManyToManyField(blank=True, to='demoapp.document')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='demoapp.item')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='demoapp.unitofmeasurement')),
                ('dispatch_order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='demoapp.dispatchorder')),
                ('packaging', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='demoapp.packaging')),
            ],
            options={
                #'constraints': [models.UniqueConstraint(condition=models.Q(('bale__isnull', False)), fields=('bale',), name='dispatch_bale_partial_unique_25may2025')],
            },
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=django.contrib.postgres.indexes.GinIndex(django.contrib.postgres.search.SearchVector('vehicle_number', config='english'), name='vehicle_number_gin'),
        ),
        migrations.AddIndex(
            model_name='goodsreceiptnote',
            index=django.contrib.postgres.indexes.GinIndex(django.contrib.postgres.search.SearchVector('prefixed_grn_number', config='english'), name='grn_number_gin'),
        ),
        migrations.AddIndex(
            model_name='goodsreceiptnote',
            index=django.contrib.postgres.indexes.GinIndex(django.contrib.postgres.search.SearchVector('e_way_bill_number', config='english'), name='grn_eway_gin'),
        ),
        migrations.AlterUniqueTogether(
            name='goodsreceiptnote',
            unique_together={('grn_number', 'tenant')},
        ),
        migrations.AlterUniqueTogether(
            name='dispatchorder',
            unique_together={('dispatch_number', 'tenant')},
        ),
    ]
